{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "recovery-planner-adf"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureFunction_GeneratePlanPrintNodesDTO_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'AzureFunction_GeneratePlanPrintNodesDTO'"
		},
		"AzureMySql_dynamic_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureMySql_dynamic'"
		},
		"AzureSqlDatabase_Preparis_dev_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase_Preparis_dev'"
		},
		"AzureFunction_GeneratePlanPrintNodesDTO_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://recoveryplannerplanparser.azurewebsites.net"
		},
		"HttpServerPreparis_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dev-main-core.preparisapp.com/API/CreateOrUpdateDocument"
		},
		"HttpServer_RecoveryPlannerPlans_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().BaseURL}plan-print/@{linkedService().PlanID}?print-preview=false&output-format=MSWORD2007&bundled=true&draft=false"
		},
		"HttpServer_RecoveryPlanner_Incidents_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().rpBaseUrl}incidents/@{linkedService().rpEventId}/preview-save?notifications=true&notificationOption=BOTH&history=true&incidentLog=true&expenseLog=false&teamInfo=true"
		},
		"RestService_RP_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://rpx-services-stg-tmp.recoveryplanner.com/rpx-rest/incidents/@{linkedService().incidentId}/preview-save?notifications=true&notificationOption=BOTH&history=true&incidentLog=true&expenseLog=false&teamInfo=true"
		},
		"StorageAccount_Preparis_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "@{linkedService().BaseUrl}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Base64 Encode Username and pwd')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable preparisUserPasswordEncoded",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Set variable preparisUserEncoded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "preparisUserPasswordEncoded",
							"value": {
								"value": "@base64(variables('preparisUserPassword'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable preparisUserEncoded",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "preparisUserEncoded",
							"value": {
								"value": "@base64(variables('preparisUser'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable newGuid",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Set variable preparisUserPasswordEncoded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "newGuid",
							"value": {
								"value": "@{guid()}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable folderNameEncoded",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Set variable newGuid",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "preparisFolderNameEncoded",
							"value": {
								"value": "@base64(variables('folderName'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable pdfContentDecoded",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pdfContentDecoded",
							"value": {
								"value": "@decodeBase64(variables('pdfContentEncoded'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"preparisUser": {
						"type": "String",
						"defaultValue": "migration@dispostable.com"
					},
					"preparisUserEncoded": {
						"type": "String"
					},
					"preparisUserPassword": {
						"type": "String",
						"defaultValue": "Preparis123!"
					},
					"preparisUserPasswordEncoded": {
						"type": "String"
					},
					"newGuid": {
						"type": "String"
					},
					"folderName": {
						"type": "String",
						"defaultValue": "Incidents"
					},
					"folderNameEncoded": {
						"type": "String"
					},
					"pdfContentEncoded": {
						"type": "String",
						"defaultValue": "\\"
					},
					"pdfContentDecoded": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Testers and Misc"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-13T10:01:42Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Create Recovery Planner Sites')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Step through JSON sites",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.json_data",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set Select Statement",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "select_statement_debug",
										"value": {
											"value": "SELECT '@{json(item()).newUserId}' as newUserId",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "step1",
							"value": {
								"value": "@split(replace(replace(replace(pipeline().parameters.json_string, '[', ''),']',''),'},','}},'),'},')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"json_data": {
						"type": "array",
						"defaultValue": [
							[
								{
									"siteFax": "",
									"siteZip": null,
									"siteCity": "TBD",
									"siteName": "Test Alt Site",
									"newUserId": "83e9a761-c4fa-11ee-b23f-6045bd7c0953",
									"siteState": null,
									"siteRegion": null,
									"primarySite": 1,
									"siteAddress": "TBD",
									"siteCountry": 2,
									"siteAddress2": null,
									"siteLatitude": "",
									"siteLongitude": "",
									"siteDescription": null,
									"sitePhoneNumber": "",
									"siteGeneralEmail": null,
									"newSiteLocationId": "83ef4ff2-c4fa-11ee-b23f-6045bd7c0953"
								},
								{
									"siteFax": "",
									"siteZip": "06611",
									"siteCity": "Trumbull",
									"siteName": "Main Site (1)",
									"newUserId": "83e9a761-c4fa-11ee-b23f-6045bd7c0953",
									"siteState": "CT",
									"siteRegion": null,
									"primarySite": 1,
									"siteAddress": "101 Merritt Blvd.",
									"siteCountry": 2,
									"siteAddress2": null,
									"siteLatitude": "41.23933",
									"siteLongitude": "-73.14601",
									"siteDescription": null,
									"sitePhoneNumber": "+1 (203) 455-9990",
									"siteGeneralEmail": null,
									"newSiteLocationId": "83ef5074-c4fa-11ee-b23f-6045bd7c0953"
								}
							]
						]
					},
					"PortalEntityID": {
						"type": "string",
						"defaultValue": "1234567"
					},
					"json_string": {
						"type": "string",
						"defaultValue": "\"[{\\\"siteFax\\\": \\\"\\\", \\\"siteZip\\\": \\\"46601\\\", \\\"siteCity\\\": \\\"South Bend\\\", \\\"siteName\\\": \\\"Site B\\\", \\\"newUserId\\\": \\\"1c0166b7-c536-11ee-b23f-6045bd7c0953\\\", \\\"siteState\\\": \\\"Indiana\\\", \\\"siteRegion\\\": \\\"North America\\\", \\\"primarySite\\\": 1, \\\"siteAddress\\\": \\\"201 Chapin St\\\", \\\"siteCountry\\\": 2, \\\"siteAddress2\\\": null, \\\"siteLatitude\\\": \\\"41.6747639\\\", \\\"siteLongitude\\\": \\\"-86.2619656\\\", \\\"siteDescription\\\": null, \\\"sitePhoneNumber\\\": \\\"1 16551927\\\", \\\"siteGeneralEmail\\\": \\\"TestEmail3@aol.com\\\", \\\"newEnitiyId_Location\\\": \\\"1c034019-c536-11ee-b23f-6045bd7c0953\\\"}]\""
					}
				},
				"variables": {
					"select_statement_debug": {
						"type": "String"
					},
					"entityType_Location": {
						"type": "String",
						"defaultValue": "2067409a-be15-492c-8954-9d76e8d8a140"
					},
					"json_array": {
						"type": "Array"
					},
					"step1": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Backup"
				},
				"annotations": [],
				"lastPublishTime": "2024-02-09T11:38:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DecodeErrorMessage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable ErrorMessage",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "errorMessage",
							"value": {
								"value": "@base64ToString(variables('errorMessageEncoded'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable ErrorMessageToUser",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable ErrorMessage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "errorMessageToUser",
							"value": {
								"value": "@base64ToString(variables('errorMessageToUserEncoded'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"errorMessageEncoded": {
						"type": "String",
						"defaultValue": "SW52YWxpZCB1c2VybmFtZSBvciBwYXNzd29yZA=="
					},
					"errorMessageToUserEncoded": {
						"type": "String",
						"defaultValue": "SW52YWxpZCB1c2VyIG5hbWUgb3IgcGFzc3dvcmQ="
					},
					"errorMessage": {
						"type": "String"
					},
					"errorMessageToUser": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Testers and Misc"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-13T10:07:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get Preparis Root Folder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Preparis Root Folder",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/json",
								"token": {
									"value": "@pipeline().parameters.preparisSessionToken",
									"type": "Expression"
								}
							},
							"url": {
								"value": "@concat(pipeline().parameters.preparisBaseURL,'API/GetEntityRootFolder')",
								"type": "Expression"
							},
							"body": {
								"value": "{\n  \"applicationId\": \"15871a25-1ab0-4c98-9a29-0f2e076c9adc\",\n  \"versionId\": \"39fd8b5d-5151-46d7-aca1-6c9f8f4cd153\",\n  \"clientTransactionKey\": \"00000\",\n  \"deviceIdAsBase64\": \"@{pipeline().parameters.preparisDeviceIdAsBase64}\",\n  \"token\": \"@{pipeline().parameters.preparisSessionToken}\",\n  \"entityId\": \"@{pipeline().parameters.preparisCurrentPortalId}\",\n  \"rootEntityId\": \"@{pipeline().parameters.UserRootPortal}\",\n  \"portalId\": \"@{pipeline().parameters.preparisCurrentPortalId}\",\n  \"createdById\": \"20247852-4d72-437a-bad5-3948cc551feb\",\n  \"lastModifiedById\": \"20247852-4d72-437a-bad5-3948cc551feb\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable rootFolderID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Preparis Root Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "rootFolderId",
									"value": {
										"type": "Expression",
										"content": "@activity('Get Preparis Root Folder').output.folder.folderId"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"preparisBaseURL": {
						"type": "string"
					},
					"preparisDeviceIdAsBase64": {
						"type": "string"
					},
					"preparisSessionToken": {
						"type": "string"
					},
					"preparisCurrentPortalId": {
						"type": "string"
					},
					"UserRootPortal": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Documents"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-25T19:01:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get Preparis Session Token')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Preparis Token",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set variable preparisUserPasswordEncoded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"url": {
								"value": "@concat(pipeline().parameters.preparisBaseURL,'API/login')",
								"type": "Expression"
							},
							"body": {
								"value": "{\n    \"applicationId\": \"15871a25-1ab0-4c98-9a29-0f2e076c9adc\",\n    \"versionId\": \"39fd8b5d-5151-46d7-aca1-6c9f8f4cd153\",\n    \"clientTransactionKey\": \"00000\",\n    \"deviceIdAsBase64\": \"@{pipeline().parameters.preparisDeviceIdAsBase64}\",\n    \"token\": null,\n    \"entityId\": null,\n    \"rootEntityId\": null,\n    \"portalId\": null,\n    \"createdById\": null,\n    \"lastModifiedById\": null,\n    \"userNameAsBase64\": \"@{variables('preparisUserEncoded')}\", \n    \"passwordAsBase64\": \"@{variables('preparisUserPasswordEncoded')}\", \n    \"referrerSiteAsBase64\": \"bG9jYWxob3N0\",\n    \"userName\": null,\n    \"password\": null,\n    \"multifactorAuthPin\": \"\",\n    \"referrerSite\": null\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable preparisUserPasswordEncoded",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable preparisUserEncoded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "preparisUserPasswordEncoded",
							"value": {
								"value": "@base64(pipeline().parameters.preparisUserPassword)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable preparisUserEncoded",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "preparisUserEncoded",
							"value": {
								"value": "@base64(pipeline().parameters.preparisUser)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable preparisSessionToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Preparis Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "preparisSessionToken",
									"value": {
										"type": "Expression",
										"content": "@activity('Get Preparis Token').output.token"
									}
								},
								{
									"key": "preparisUserId",
									"value": {
										"type": "Expression",
										"content": "@activity('Get Preparis Token').output.userId"
									}
								},
								{
									"key": "currentPortalId",
									"value": {
										"type": "Expression",
										"content": "@activity('Get Preparis Token').output.currentPortalId"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"preparisUser": {
						"type": "string",
						"defaultValue": "migration@dispostable.com"
					},
					"preparisUserPassword": {
						"type": "string",
						"defaultValue": "Preparis123!"
					},
					"preparisBaseURL": {
						"type": "string"
					},
					"preparisDeviceIdAsBase64": {
						"type": "string"
					}
				},
				"variables": {
					"preparisUserEncoded": {
						"type": "String"
					},
					"preparisUserPasswordEncoded": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Documents"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-25T19:01:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get RP Session Token')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get RP Session Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"url": {
								"value": "@{pipeline().parameters.rpBaseUrl}login?client=@{pipeline().parameters.rpClientID}",
								"type": "Expression"
							},
							"body": {
								"value": "{\n    \"clientId\": \"@{pipeline().parameters.rpClientID}\",\n    \"username\": \"@{pipeline().parameters.rpUserName}\",\n    \"password\": \"@{pipeline().parameters.rpUserPassword}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable rpSessionToken",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get RP Session Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "rpSessionToken",
									"value": {
										"type": "Expression",
										"content": "@activity('Get RP Session Token').output.ADFWebActivityResponseHeaders['RpxSession-Id']"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"rpClientID": {
						"type": "string"
					},
					"rpUserName": {
						"type": "string"
					},
					"rpUserPassword": {
						"type": "string"
					},
					"rpBaseUrl": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Documents"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-25T19:01:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get or Create Preparis Folder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Preparis Folder Status",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/json",
								"token": {
									"value": "@pipeline().parameters.preparisSessionToken",
									"type": "Expression"
								}
							},
							"url": {
								"value": "@concat(pipeline().parameters.preparisBaseURL,'API/CheckFolderStatus')",
								"type": "Expression"
							},
							"body": {
								"value": "{\n  \"applicationId\": \"15871a25-1ab0-4c98-9a29-0f2e076c9adc\",\n  \"versionId\": \"39fd8b5d-5151-46d7-aca1-6c9f8f4cd153\",\n  \"clientTransactionKey\": \"00000\",\n  \"deviceIdAsBase64\": \"@{pipeline().parameters.preparisDeviceIdAsBase64}\",\n  \"token\": \"@{pipeline().parameters.preparisSessionToken}\",\n  \"entityId\": \"@{pipeline().parameters.entityId}\",\n  \"rootEntityId\": \"@{pipeline().parameters.rootEntityId}\",\n  \"portalId\": \"@{pipeline().parameters.portalId}\",\n  \"createdById\": \"20247852-4d72-437a-bad5-3948cc551feb\",\n  \"lastModifiedById\": \"20247852-4d72-437a-bad5-3948cc551feb\",\n  \"folderName\": \"@{pipeline().parameters.folderName}\",\n  \"folderId\": \"@{pipeline().parameters.folderId}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Folder Does Not Exist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Preparis Folder Status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get Preparis Folder Status').output.folderStatus,0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set variable preparisFolderGuid whenFolderExists",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "preparisFolderGuid",
										"value": {
											"value": "@activity('Get Preparis Folder Status').output.folder.folderId",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Create Preparis Folder",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Set variable folderNameEncoded_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"token": {
												"value": "@pipeline().parameters.preparisSessionToken",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat(pipeline().parameters.preparisBaseURL,'API/CreateFolder')",
											"type": "Expression"
										},
										"body": {
											"value": "{\n  \"applicationId\": \"15871a25-1ab0-4c98-9a29-0f2e076c9adc\",\n  \"versionId\": \"39fd8b5d-5151-46d7-aca1-6c9f8f4cd153\",\n  \"clientTransactionKey\": \"00000\",\n  \"deviceIdAsBase64\": \"@{pipeline().parameters.preparisDeviceIdAsBase64}\",\n  \"token\": \"@{pipeline().parameters.preparisSessionToken}\",\n  \"entityId\": \"@{pipeline().parameters.entityId}\",\n  \"rootEntityId\": \"@{pipeline().parameters.rootEntityId}\",\n  \"portalId\": \"@{pipeline().parameters.portalId}\",\n  \"createdById\": \"20247852-4d72-437a-bad5-3948cc551feb\",\n  \"lastModifiedById\": \"20247852-4d72-437a-bad5-3948cc551feb\",\n  \"folderId\": \"@{variables('preparisFolderGuid')}\",\n  \"folderNameAsBase64\": \"@{variables('preparisFolderNameEncoded')}\", \n  \"parentFolderId\": \"@{pipeline().parameters.parentFolderId}\"\n}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable preparisFolderGuid",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "preparisFolderGuid",
										"value": {
											"value": "@{guid()}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable folderNameEncoded_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable preparisFolderGuid",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "preparisFolderNameEncoded",
										"value": {
											"value": "@base64(pipeline().parameters.folderName)",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set Pipeline Return Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "If Folder Does Not Exist",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "preparisFolderGuid",
									"value": {
										"type": "Expression",
										"content": "@variables('preparisFolderGuid')"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"preparisBaseURL": {
						"type": "string"
					},
					"preparisDeviceIdAsBase64": {
						"type": "string"
					},
					"preparisSessionToken": {
						"type": "string"
					},
					"entityId": {
						"type": "string"
					},
					"rootEntityId": {
						"type": "string"
					},
					"folderId": {
						"type": "string"
					},
					"portalId": {
						"type": "string"
					},
					"folderName": {
						"type": "string"
					},
					"parentFolderId": {
						"type": "string"
					}
				},
				"variables": {
					"preparisFolderGuid": {
						"type": "String"
					},
					"preparisFolderNameEncoded": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Documents"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-25T19:01:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/json obj parameter tester')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.obj.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "newEmailId",
										"value": {
											"value": "@item().newEmailId",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable1_copy1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "newUserId",
										"value": {
											"value": "@item().newUserId",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"obj": {
						"type": "object",
						"defaultValue": {
							"value": [
								{
									"newEmailId": "48a47dc2-eae7-11ee-8102-6045bd7c0953",
									"newUserId": "482b541d-eae7-11ee-8102-6045bd7c0953",
									"emailAddressTypeId": "d2b1d156-bdf9-4223-9368-825a448025ad",
									"email": "9175583867@vtext.com"
								},
								{
									"newEmailId": "48a4829b-eae7-11ee-8102-6045bd7c0953",
									"newUserId": "482b541d-eae7-11ee-8102-6045bd7c0953",
									"emailAddressTypeId": "acb4f38f-3642-472a-8de2-dcead28584a2",
									"email": "9175583867@vtext.com"
								}
							]
						}
					}
				},
				"variables": {
					"newEmailId": {
						"type": "String"
					},
					"newUserId": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Testers and Misc"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-25T20:52:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test looping')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Initial Array",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Initial array",
							"value": {
								"value": "@json('[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Element in initial array",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Initial Array",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('Initial array')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Batch Is Ready",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set Test variable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@and(\ngreater(item(), 0),\nequals(mod(item(), 5), 0)\n) \n",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Reset insert Statement variable",
												"type": "SetVariable",
												"dependsOn": [],
												"policy": {
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"variableName": "insert_statemts",
													"value": {
														"value": "@json('[]')",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Append variable to insert statements",
									"type": "AppendVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "insert_statemts",
										"value": {
											"value": "insert item '@{item()}'",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Test variable",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Append variable to insert statements",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "testResult",
										"value": {
											"value": "'@{join(variables('insert_statemts'), ';')}'",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Batch is not empty",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Element in initial array",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(length(variables('insert_statemts')), 0)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set test variable at the end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Batch is not empty",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "testResult",
							"value": {
								"value": "@join(variables('insert_statemts'), ';')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Initial array": {
						"type": "Array"
					},
					"insert_statemts": {
						"type": "Array"
					},
					"testResult": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Testers and Misc"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFunction_GeneratePlanPrintNodesDTO')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AzureFunction_GeneratePlanPrintNodesDTO_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AzureFunction_GeneratePlanPrintNodesDTO_functionKey')]"
					},
					"authentication": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureMySql_dynamic')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"db_name": {
						"type": "string",
						"defaultValue": "marshall"
					},
					"server_name": {
						"type": "string",
						"defaultValue": "recovery-planner-mysql-server.mysql.database.azure.com"
					}
				},
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('AzureMySql_dynamic_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase_Preparis_dev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_Preparis_dev_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServerPreparis')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServerPreparis_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer_RecoveryPlannerPlans')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"BaseURL": {
						"type": "string"
					},
					"PlanID": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer_RecoveryPlannerPlans_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer_RecoveryPlanner_Incidents')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"rpBaseUrl": {
						"type": "string"
					},
					"rpEventId": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer_RecoveryPlanner_Incidents_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService_RP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"incidentId": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_RP_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/StorageAccount_Preparis')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"BaseUrl": {
						"type": "string",
						"defaultValue": "''"
					}
				},
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('StorageAccount_Preparis_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "Storage"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Create Preparis Portal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateNewPortal",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Script Update Portal to deleted if it already exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[az_ppentityCustom_CreateNewPortal]",
							"storedProcedureParameters": {
								"ParentEntityId": {
									"value": "b9a3eed5-80b2-4c11-b317-1b2ab2c006aa",
									"type": "Guid"
								},
								"CompanyName": {
									"value": {
										"value": "@pipeline().parameters.CompanyName",
										"type": "Expression"
									},
									"type": "String"
								},
								"VerticalID": {
									"value": "3089683e-a1c9-4c91-9b87-1e3888a9cfcf",
									"type": "Guid"
								},
								"PortalID": {
									"value": {
										"value": "@pipeline().parameters.PortalEntityID",
										"type": "Expression"
									},
									"type": "Guid"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_Preparis_dev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Script Update Portal to deleted if it already exists",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_Preparis_dev",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "with portal_exists as (\n\tSELECT e.entityId, e.entityName, e.entityTypeId, et.entityTypeName, e.entityStatusTypeId, st.entityStatusTypeName \n\tfrom  azstudioEntityEntities e\n\tJOIN azstudioEntityEntityTypes et on e.entityTypeId = et.entityTypeId\n\tJOIN azstudioEntityStatusTypes st on e.entityStatusTypeId = st.entityStatusTypeId\n\twhere e.entityName = '@{pipeline().parameters.CompanyName}'\n\tand et.entityTypeName = 'Portal'\n\tand e.entityStatusTypeId != '847EBBEF-B0C9-48A3-9891-212833DDFAC6'\n)\n\nupdate azstudioEntityEntities \nset entityStatusTypeId = '847EBBEF-B0C9-48A3-9891-212833DDFAC6'\nwhere entityId in (select entityId from portal_exists)",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CompanyName": {
						"type": "string"
					},
					"PortalEntityID": {
						"type": "string"
					}
				},
				"variables": {
					"PortalEntityID": {
						"type": "String"
					},
					"CreatedByGUID": {
						"type": "String",
						"defaultValue": "7b5ea827-bcd7-4a8a-8807-fc7e94a93455"
					},
					"DefaultLocationId": {
						"type": "String",
						"defaultValue": "0b92f0ba-1a21-43cb-995e-e2843f53a557"
					}
				},
				"folder": {
					"name": "Portal"
				},
				"annotations": [],
				"lastPublishTime": "2024-03-25T19:01:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Preparis_dev')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Process Impact Categories-Timespans-Severity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Insert Data",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase_Preparis_dev",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"parameters": [
										{
											"name": "portalId",
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.currentPortalId",
												"type": "Expression"
											},
											"direction": "Input"
										}
									],
									"type": "Query",
									"text": {
										"value": "insert into bcProcessImpact\n(\n    processImpactId,\n    portalProcessId,\n    impactCategoryId,\n    impactSeverityId,\n    impactTimespanId,\n    dateTimeCreated,\n    createdById\n)\nselect\nNEWID() processImpactId,\nportalProcessId,\nimpactCategoryId,\nist.impactSeverityId,\nits.impactTimespanId,\nCURRENT_TIMESTAMP,\n'@{pipeline().globalParameters.preparisCreatedById}'\nfrom bcPortalProcess pp\njoin bcPortalFunctionalArea pfa on pp.portalFunctionalAreaId = pfa.portalFunctionalAreaId\njoin (select impactCategoryId from bcOverrideSystemImpactCategories where portalId = '@{pipeline().parameters.currentPortalId}') ic on 1=1\njoin (select impactTimespanId from bcImpactTimespan where portalId = '@{pipeline().parameters.currentPortalId}') its on 1 = 1\njoin (select impactSeverityId from bcImpactSeverity where sequenceNbr = 1) ist on 1=1\nwhere pfa.portalId = '@{pipeline().parameters.currentPortalId}'",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"currentPortalId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "BC/RTO MTD"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase_Preparis_dev')]"
			]
		}
	]
}