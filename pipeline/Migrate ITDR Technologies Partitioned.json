{
	"name": "Migrate ITDR Technologies Partitioned",
	"properties": {
		"activities": [
			{
				"name": "Lookup iteration data",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Create ITDR Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Lookup Iteration Data",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"tableName": "migration_itdr_technologies"
					}
				}
			},
			{
				"name": "Iteration",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup iteration data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup iteration data').output.pipelineReturnValue.iteration_data_array",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Migrate ITDR Technology",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Migrate ITDR Technologies",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"currentPortalId": {
										"value": "@pipeline().parameters.currentPortalId",
										"type": "Expression"
									},
									"iterationStart": {
										"value": "@item().iteration_start",
										"type": "Expression"
									},
									"iterationStop": {
										"value": "@item().iteration_stop",
										"type": "Expression"
									},
									"portalPlanTypeId": {
										"value": "@pipeline().parameters.portalPlanTypeId",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Create ITDR Data",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": "/*All technologies for ITDR*/\r\ndrop table if exists migration_itdr_technologies;\r\nCREATE TABLE migration_itdr_technologies\r\nas (\r\n    select tech.*,\r\n    td.technologyId,\r\n    uuid() newPortalPlanTechnologyId,\r\n    ROW_NUMBER() OVER (ORDER BY tech.rp_technology_id) row_num\r\n    from\r\n    (SELECT r.id rp_technology_id\r\n        , r.name rp_technology_name\r\n        , MAX(!ISNULL(vr.VENDOR_ID)) has_vendor\r\n        , MAX(!ISNULL(fr.FILE_ID)) has_file\r\n        , MAX(!ISNULL(pr.PLAN_ID)) has_plan\r\n        , MAX(!ISNULL(tr.TASK_ID)) has_task\r\n    FROM T_RESOURCE r\r\n             LEFT JOIN T_VENDOR_RESOURCE vr ON r.id = vr.RESOURCE_ID\r\n             LEFT JOIN T_FILE_RESOURCE fr ON r.id = fr.RESOURCE_ID\r\n             LEFT JOIN T_RESOURCE_PLAN pr ON r.id = pr.RESOURCE_ID\r\n             LEFT JOIN T_TASK_RESOURCE tr ON r.id = tr.RESOURCE_ID\r\n    GROUP BY r.id, r.name\r\n    HAVING has_vendor OR has_file OR has_plan OR has_task) tech\r\n    join migration_technology_data td on td.rp_technology_id = tech.rp_technology_id\r\n);\r\n\r\n/*select * from migration_itdr_technologies;*/\r\n\r\n/*All Task sets, teams, members for ITDR technologies*/\r\ndrop table if exists migration_itdr_tasks_teams_members;\r\ncreate table migration_itdr_tasks_teams_members\r\nas (\r\n    SELECT\r\n    r.rp_technology_id,\r\n    r.rp_technology_name,\r\n    r.newPortalPlanTechnologyId,\r\n    t.id task_id,\r\n    cast(AES_DECRYPT(t.name, x'37a95c7d900e8ebb39c9d1b36cf448a5') as char(255)) task_name,\r\n    t.estimatedTime,\r\n    t.measure time_measure,\r\n    t.task_set_id,\r\n    tm.id team_id,\r\n    tm.name team_name,\r\n    u.id user_id,\r\n    u.displayName user_name\r\n    FROM migration_itdr_technologies r\r\n        JOIN T_TASK_RESOURCE tr ON tr.RESOURCE_ID = r.rp_technology_id\r\n        LEFT JOIN T_TASK t ON tr.TASK_ID = t.id\r\n        LEFT JOIN T_TASK_HOLDER th ON th.task_id = t.id\r\n        LEFT JOIN T_TEAM tm ON tm.id = th.team_id\r\n        LEFT JOIN T_INDIVIDUAL_ASSIGNMENT ia ON ia.team_id = tm.id\r\n        LEFT JOIN T_INDIVIDUAL_ASSIGNMENT_MEMBER iam ON ia.id = iam.ASSIGNMENT_ID\r\n        LEFT JOIN T_USER u ON iam.USER_ID = u.id\r\n);\r\n\r\n/*select * from migration_itdr_tasks_teams_members;*/\r\n\r\n/*Task sets*/\r\ndrop table if exists migration_itdr_task_set;\r\ncreate table migration_itdr_task_set\r\nas (\r\n    select t.*,\r\n    ROW_NUMBER() OVER (ORDER BY t.newPortalPlanTechnologyTaskSetId) row_num\r\n    from\r\n    (select\r\n    mittm.*,\r\n    uuid() newPortalPlanTechnologyTaskSetId\r\n    from\r\n    (select distinct\r\n    team_id,\r\n    team_name,\r\n    newPortalPlanTechnologyId\r\n    from migration_itdr_tasks_teams_members ttm) mittm) t\r\n);\r\n\r\n/*select * from migration_itdr_task_set;*/\r\n\r\n/*All task set members*/\r\ndrop table if exists migration_itdr_task_set_members;\r\ncreate table migration_itdr_task_set_members\r\nas (\r\n    select mem.*,\r\n    ROW_NUMBER() OVER (ORDER BY mem.newPortalPlanTechnologyTaskSetMemberId) row_num\r\n    from\r\n    (select *, uuid() newPortalPlanTechnologyTaskSetMemberId\r\n    from\r\n    (select distinct\r\n    mittm.team_id,\r\n    mittm.team_name,\r\n    ud.userId,\r\n    ud.firstName,\r\n    ud.lastName,\r\n    ud.newUserId\r\n    from migration_itdr_tasks_teams_members mittm\r\n    join migration_itdr_task_set ts on ts.team_id = mittm.team_id\r\n    join migration_all_user_data ud on ud.userId = mittm.user_id) t) mem\r\n);\r\n\r\n/*select * from migration_itdr_task_set_members\r\norder by newPortalPlanTechnologyTaskSetMemberId;*/\r\n\r\n/*Task sets tasks*/\r\ndrop table if exists migration_itdr_task_set_tasks;\r\ncreate table migration_itdr_task_set_tasks\r\nas (\r\n    select tasks.*,\r\n    ROW_NUMBER() OVER (ORDER BY tasks.newPortalPlanTechnologyTaskId) row_num\r\n    from\r\n    (select *, uuid() newPortalPlanTechnologyTaskId\r\n    from\r\n    (select distinct\r\n    mittm.team_id,\r\n    mittm.team_name,\r\n    mittm.task_id,\r\n    mittm.task_name,\r\n    mittm.estimatedTime,\r\n    mittm.time_measure,\r\n    ts.newPortalPlanTechnologyTaskSetId\r\n    from migration_itdr_tasks_teams_members mittm\r\n    join migration_itdr_task_set ts on ts.team_id = mittm.team_id\r\n    ) t) tasks\r\n);\r\n\r\n/*select * from migration_itdr_task_set_tasks\r\norder by newPortalPlanTechnologyTaskSetId, task_id;*/\r\n\r\nselect count(*) from migration_itdr_task_set_tasks;",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "RecoveryPlanner",
						"type": "DatasetReference",
						"parameters": {
							"db_name": {
								"value": "@pipeline().globalParameters.rp_db_name",
								"type": "Expression"
							},
							"server_name": {
								"value": "@pipeline().globalParameters.rp_server_name",
								"type": "Expression"
							}
						}
					}
				}
			}
		],
		"parameters": {
			"currentPortalId": {
				"type": "string"
			},
			"portalPlanTypeId": {
				"type": "string"
			}
		},
		"folder": {
			"name": "ITDR"
		},
		"annotations": []
	}
}