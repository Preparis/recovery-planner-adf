{
	"name": "Create Custom Fields",
	"properties": {
		"activities": [
			{
				"name": "Get Custom Fields",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": {
							"value": "select\nrow_num\n, newCustomFieldId customFieldId\n, replace(name , '''', '''''') fieldName\n, customFieldDataTypeId\n, customFieldTypeId\n, isRequired\n, displaySequence\n from migration_custom_fields\nwhere row_num between @{pipeline().parameters.iteration_start} and @{pipeline().parameters.iteration_stop}",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "RecoveryPlanner",
						"type": "DatasetReference",
						"parameters": {
							"db_name": {
								"value": "@pipeline().parameters.rp_db_name",
								"type": "Expression"
							},
							"server_name": {
								"value": "@pipeline().parameters.rp_server_name",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach Custom Field",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Custom Fields",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Custom Fields').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Append variable custom fields",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "insert_custom_fields_statements",
								"value": {
									"value": "INSERT INTO ppPortalCustomField\n(customFieldId\n, portalId\n, customFieldTypeId\n, fieldName\n, customFieldDataTypeId\n, isRequired\n, displaySequence\n, customFieldStatusTypeId\n, dateTimeCreated\n, createdById)\nVALUES\n(\n    '@{item().customFieldId}'\n    , '@{pipeline().parameters.portalId}'\n    , '@{item().customFieldTypeId}'\n    , '@{item().fieldName}'\n    , '@{item().customFieldDataTypeId}'\n    , '@{item().isRequired}'\n    , '@{item().displaySequence}'\n    , '@{pipeline().parameters.customFieldStatusTypeId}'\n    , CURRENT_TIMESTAMP\n    , '@{pipeline().parameters.createdById}'\n)",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Insert Custom Fields Batch",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "ForEach Custom Field",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_Preparis_dev",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": {
								"value": "@join(variables('insert_custom_fields_statements'),';')",
								"type": "Expression"
							}
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"parameters": {
			"iteration_start": {
				"type": "int"
			},
			"iteration_stop": {
				"type": "int"
			},
			"rp_db_name": {
				"type": "string"
			},
			"rp_server_name": {
				"type": "string"
			},
			"portalId": {
				"type": "string",
				"defaultValue": "bfd81129-1855-4ff7-8d7a-d36b1cd307a7"
			},
			"createdById": {
				"type": "string",
				"defaultValue": "7b5ea827-bcd7-4a8a-8807-fc7e94a93455"
			},
			"customFieldStatusTypeId": {
				"type": "string",
				"defaultValue": "f1d4f59a-64d9-43be-bebf-958ef924f2b0"
			}
		},
		"variables": {
			"insert_custom_fields_statements": {
				"type": "Array"
			},
			"TestOutputArray": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Custom Fields"
		},
		"annotations": []
	}
}