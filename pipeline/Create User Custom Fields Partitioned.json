{
	"name": "Create User Custom Fields Partitioned",
	"properties": {
		"activities": [
			{
				"name": "Build Migration Tables",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": {
							"value": "/* DROP TABLE IF EXISTS migration_custom_fields_data_types_mapping;\nDROP TABLE IF EXISTS migration_custom_fields;\nDROP TABLE IF EXISTS migration_custom_fields_options;\nDROP TABLE IF EXISTS migration_user_custom_fields_values;*/\n\n/* the migration_custom_fields_data_types_mapping table can be created once\nand populated once\n*/\n\nCREATE TABLE IF NOT EXISTS migration_custom_fields_data_types_mapping\n(\n    rp_type INT,\n    rp_descr char(50),\n    preparis_type CHAR(38),\n    preparis_descr char(50)\n);\n\ninsert into migration_custom_fields_data_types_mapping\n(rp_type, rp_descr, preparis_type, preparis_descr)\nselect a.rp_type, a.rp_descr, a.preparis_type, a.preparis_descr\nfrom\n(select t.* from\n(values\nrow(10, 'DATE', '1eccbe40-1b3b-461b-95df-35f1fe6a8af2', 'DateTime'),\nrow(2, 'ShortText', '0f6f2372-1e4c-4d67-ad13-615a0540488c', 'ShortText'),\nrow(3, 'RADIO', 'aad6f035-05f9-42d3-b6ea-682371340875', 'SelectOne'),\nrow(0, 'PICKLIST', 'aad6f035-05f9-42d3-b6ea-682371340875', 'SelectOne'),\nrow(5, 'MULTISELECT', '76c83029-8439-42ad-90e6-7f0ff54b732c', 'SelectMany'),\nrow(1, 'CHECKBOX', 'd8bd3d80-d25d-4056-8754-a740f2396792', 'TrueFalse'),\nrow(4, 'TEXTBOX', 'b9847d16-19b5-4ed4-a4e3-d7f07533ab5a', 'LongText'),\nrow(9, 'NUMERIC', '5f31785c-4d3c-4d68-a834-da37c2bc0a76', 'Numeric')) t (rp_type, rp_descr, preparis_type, preparis_descr)) a\nleft join migration_custom_fields_data_types_mapping b on b.rp_type = a.rp_type\nwhere b.rp_type is null;\n\n/* Process custom fields */\n\nCREATE TABLE IF NOT EXISTS migration_custom_fields\n(\n    row_num INT,\n    id INT,\n    areaType INT,\n    name char(255),\n    isRequired TINYINT(1),\n    customFieldDataTypeId CHAR(38),\n    displaySequence SMALLINT,\n    newCustomFieldId CHAR(38)\n);\n\ndelete from migration_custom_fields\nwhere areaType = @{pipeline().globalParameters.rpCustomFieldType};\n\ninsert into migration_custom_fields\n(row_num, id, areaType, name, isRequired, customFieldDataTypeId, displaySequence, newCustomFieldId)\nselect\nROW_NUMBER() OVER (ORDER BY cf.id) row_num,\ncf.id,\ncf.areaType,\ncf.name,\ncf.required isRequired,\ncfdtm.preparis_type customFieldDataTypeId,\ncf.possition displaySequence,\nuuid()\nfrom t_custom_field cf\njoin migration_custom_fields_data_types_mapping cfdtm on cf.type = cfdtm.rp_type\nwhere areaType = @{pipeline().globalParameters.rpCustomFieldType};\n\n/* process custom fields options */\n\nCREATE TABLE IF NOT EXISTS migration_custom_fields_options\n(\n    row_num INT,\n    id INT,\n    field_id INT,\n    areaType INT,\n    name char(255),\n    displaySequence SMALLINT,\n    isDefault TINYINT(1),\n    customFieldOptionStatusTypeId CHAR(38),\n    newCustomFieldId CHAR(38),\n    newCustomFieldOptionId CHAR(38)\n);\n\ndelete from migration_custom_fields_options\nwhere areaType = @{pipeline().globalParameters.rpCustomFieldType};\n\ninsert into migration_custom_fields_options\nselect\nROW_NUMBER() OVER (ORDER BY cfch.id) row_num,\ncfch.id,\nmcf.areaType,\ncfch.field_id,\ncfch.name optionName,\ncfch.possition displaySequence,\n0 isDefault,\n'b5da6970-6125-4904-b87f-c39187d4fd8a' customFieldOptionStatusTypeId /*Active*/,\nmcf.newCustomFieldId,\nuuid() newCustomFieldOptionId\n from migration_custom_fields mcf\njoin t_custom_field_choice cfch on mcf.id = cfch.field_id\nwhere mcf.areaType = @{pipeline().globalParameters.rpCustomFieldType};\n\n/* custom fields values */\n\nCREATE TABLE IF NOT EXISTS migration_user_custom_fields_values\n(\n    row_num INT,\n    user_id INT,\n    field_Id INT,\n    areaType INT,\n    fieldValue text(4000),\n    newUserId CHAR(38),\n    newCustomFieldId CHAR(38),\n    userCustomFieldStatusTypeId CHAR(38)\n);\n\ndelete from migration_user_custom_fields_values\nwhere areaType = @{pipeline().globalParameters.rpCustomFieldType};\n\ninsert into migration_user_custom_fields_values\nselect\n    ROW_NUMBER() OVER (ORDER BY cv.id) row_num,\n    cv.user_id,\n    mcf.areaType,\n    cv.field_id,\n    SUBSTRING(COALESCE(CONVERT(cv.text, char(4000)),\n    convert(cv.checked, char(4000)),\n    convert(cv.textArea, char(4000)),\n    convert(cv.date, char(4000))), 1, 4000) userValue, \n    ud.newUserId,\n    mcf.newCustomFieldId,\n    '0dd44108-690c-45ee-ad20-d15a322334cf' userCustomFieldStatusTypeId /*Active*/\nfrom t_custom_value cv\njoin migration_all_user_data ud on ud.userId = cv.user_id\njoin migration_custom_fields mcf on mcf.id = cv.field_id\nwhere mcf.areaType = @{pipeline().globalParameters.rpCustomFieldType};\n\nselect 'DONE' as 'Lookup Activity Hack';",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "RecoveryPlanner",
						"type": "DatasetReference",
						"parameters": {
							"db_name": {
								"value": "@pipeline().parameters.rp_db_name",
								"type": "Expression"
							},
							"server_name": {
								"value": "@pipeline().parameters.rp_server_name",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "Lookup Iteration Data",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Build Migration Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Lookup Iteration Data",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"tableName": "migration_custom_fields",
						"rp_db_name": {
							"value": "@pipeline().parameters.rp_db_name",
							"type": "Expression"
						},
						"rp_server_name": {
							"value": "@pipeline().parameters.rp_server_name",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "ForEach Custom Field in batch",
				"description": "For Each Recovery Planner User Custom Field Batch",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup Iteration Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup Iteration Data').output.pipelineReturnValue.iteration_data_array",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Set Iteration Start",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "iteration_start",
								"value": {
									"value": "@item().iteration_start",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Iteration Stop",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "iteration_stop",
								"value": {
									"value": "@item().iteration_stop",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Create Custom Fields",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Set Iteration Start",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Set Iteration Stop",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Create Custom Fields",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"iteration_start": {
										"value": "@item().iteration_start",
										"type": "Expression"
									},
									"iteration_stop": {
										"value": "@item().iteration_stop",
										"type": "Expression"
									},
									"rp_db_name": {
										"value": "@pipeline().parameters.rp_db_name",
										"type": "Expression"
									},
									"rp_server_name": {
										"value": "@pipeline().parameters.rp_server_name",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"rp_db_name": {
				"type": "string",
				"defaultValue": "fmh"
			},
			"rp_server_name": {
				"type": "string",
				"defaultValue": "recovery-planner-mysql-server.mysql.database.azure.com"
			},
			"created_by_id": {
				"type": "string"
			},
			"portalId": {
				"type": "string"
			}
		},
		"variables": {
			"iteration_start": {
				"type": "Integer",
				"defaultValue": 0
			},
			"iteration_stop": {
				"type": "Integer",
				"defaultValue": 0
			},
			"iteration": {
				"type": "Integer",
				"defaultValue": 0
			},
			"max_row_num": {
				"type": "Integer"
			},
			"insert_custom_fields_statements": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "Custom Fields"
		},
		"annotations": []
	}
}