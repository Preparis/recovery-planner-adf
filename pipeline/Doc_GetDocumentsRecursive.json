{
	"name": "Doc_GetDocumentsRecursive",
	"properties": {
		"activities": [
			{
				"name": "Until1",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Set Unprocessed Foldes Count",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"activities": [
						{
							"name": "Get Folders Content",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"waitOnCompletion": true
							}
						},
						{
							"name": "Unprocessed Folders Count",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Get Folders Content",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": []
						},
						{
							"name": "Set Unprocessed Folders Count",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Unprocessed Folders Count",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": []
						}
					],
					"timeout": "0.12:00:00"
				}
			},
			{
				"name": "Doc_GetRootFolderContent",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Create migration schema",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"url": {
						"value": "@{pipeline().globalParameters.rpBaseURL}folder/content?page=0&size=1",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Save Root Fodler Content",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Create Iterations Array",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			},
			{
				"name": "Set Unprocessed Foldes Count",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Save Root Fodler Content",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			},
			{
				"name": "Create migration schema",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": "DROP TABLE IF EXISTS migration_rp_documents;\r\n CREATE TABLE migration_rp_documents\r\n (\r\n    newId NVARCHAR(38),\r\n    rpId INTEGER,\r\n    name NVARCHAR(1000),\r\n    type NVARCHAR(50),\r\n    rpParentId INTEGER,\r\n    newParentId NVARCHAR(38),\r\n    isProcessed bit,\r\n    fileSize INTEGER,\r\n    hasChildren bit,\r\n    accessLevel NVARCHAR(100)\r\n );",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "RecoveryPlanner",
						"type": "DatasetReference",
						"parameters": {
							"db_name": {
								"value": "@pipeline().globalParameters.rp_db_name",
								"type": "Expression"
							},
							"server_name": {
								"value": "@pipeline().globalParameters.rp_server_name",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "Create Iterations Array",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Doc_GetRootFolderContent",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": []
			}
		],
		"folder": {
			"name": "Testers and Misc"
		},
		"annotations": []
	}
}