{
	"name": "Create User Phone Numbers Partitioned",
	"properties": {
		"activities": [
			{
				"name": "Execute Pipeline Lookup Iteration Data",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Create Phone Numbers migration tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Lookup Iteration Data",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"tableName": "migration_userPhones"
					}
				}
			},
			{
				"name": "ForEach User Phone",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Execute Pipeline Lookup Iteration Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Execute Pipeline Lookup Iteration Data').output.pipelineReturnValue.iteration_data_array",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Create Preparis User Phone Number",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Create User Phone Numbers",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"PortalEntityID": {
										"value": "@pipeline().parameters.PortalEntityID",
										"type": "Expression"
									},
									"CreatedByGUID": {
										"value": "@pipeline().parameters.CreatedByGUID",
										"type": "Expression"
									},
									"db_name": {
										"value": "@pipeline().parameters.rp_db_name",
										"type": "Expression"
									},
									"db_server": {
										"value": "@pipeline().parameters.rp_db_server",
										"type": "Expression"
									},
									"iteration_start": {
										"value": "@item().iteration_start",
										"type": "Expression"
									},
									"iteration_stop": {
										"value": "@item().iteration_stop",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Create Phone Numbers migration tables",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": "/*  USER PHONE NUMBERS  */\r\ndrop table if exists migration_all_userPhones;\r\n\r\ncreate table migration_all_userPhones as (\r\n    select \r\n        (select uuid()) as newPhoneId\r\n        , mud.newUserId\r\n        , ci.id as rpPhoneId\r\n        , ct.name  \r\n        , cast(AES_DECRYPT(ci.numberString, x'37a95c7d900e8ebb39c9d1b36cf448a5') as char(255)) phoneNumber\r\n        , cast(AES_DECRYPT(ci.internationalCode, x'37a95c7d900e8ebb39c9d1b36cf448a5') as char(255)) internationalCode\r\n        , cast(AES_DECRYPT(ci.extension, x'37a95c7d900e8ebb39c9d1b36cf448a5') as char(255)) extension\r\n        , mcm.recoveryPlannerCountryName\r\n        , mcm.CountryTypeName\r\n        , case when mcm.CountryTypeId is NULL or mcm.CountryTypeId = '' then '2D76605B-86B5-40FF-9A71-C4893E5916FB' \r\n            else mcm.CountryTypeId\r\n            end as CountryTypeId \r\n        , case \r\n            when cic.code  != 'US' then  '8337fbb1-9a43-45eb-aafa-19c877e762fc' \r\n            else 'ffabdff8-4b2c-4655-9edc-8195c303419d' \r\n            end as 'phoneNumberSubTypeId'\r\n        /*\r\n        Follow the Preparis Mapping else follow the following logic. \r\n        Phone data, map lowest internal ID data per distribution type that has data.\r\n        rp.user.phone(Personal Distribution) = p.user.phone(Additional Personal Phone)\r\n        rp.user.phone(Business Distribution) = p.user.phone(Office Phone)\r\n\r\n\tdistributionType\r\n\t\t0 = business\r\n\t\t1 = personal\r\n\r\n    emergency - emergency contact flag. we do not need emergency contacts\r\n\r\nphoneNumberTypeId\t                    phoneNumberTypeName\r\n9da9c256-8283-4a0a-bd3d-10df73e1f43b\tSecurity\r\n391dca7b-aac3-4875-94e2-2ef680c7f35f\tAdditional Personal\r\n20509910-5326-4057-b21f-5c694b314692\tOffice\r\n5322a58a-8683-449b-a562-b0577de3fa74\tEmergency\r\n5eec12d5-595f-4123-a613-c63e701ae993\tPersonal\r\n33f27328-8fee-4835-b020-cd6d48bb39cd\tMobile\r\n \r\n        */\r\n        , case \r\n            when ct.mappedName = 'preparisOfficePhone' then '20509910-5326-4057-b21f-5c694b314692'\r\n            when ct.mappedName = 'preparisPersonalPhone' then '5eec12d5-595f-4123-a613-c63e701ae993'\r\n            when ct.mappedName = 'preparisMobilePhone' then '33f27328-8fee-4835-b020-cd6d48bb39cd'\r\n            when ct.mappedName = 'preparisAdditionalMobilePhone' then '391dca7b-aac3-4875-94e2-2ef680c7f35f'\r\n            when cm.name = 'Cell Phone' and ct.distributionType = 0 then '33f27328-8fee-4835-b020-cd6d48bb39cd'\r\n            when cm.name = 'Cell Phone' and ct.distributionType = 1 then '5eec12d5-595f-4123-a613-c63e701ae993'\r\n            when cm.name = 'PHONE' and ct.distributionType = 0 then '20509910-5326-4057-b21f-5c694b314692'\r\n            when cm.name = 'PHONE' and ct.distributionType = 1 then '391dca7b-aac3-4875-94e2-2ef680c7f35f'\r\n            end as 'phoneNumberTypeId'\r\n        , ct.mappedName\r\n        , ct.distributionType\r\n    from migration_user_data mud\r\n    LEFT JOIN T_CONTACT_INFO ci ON mud.userId = ci.owner_id\r\n    JOIN T_CONTACT_TYPE ct ON ci.contact_type_id = ct.id\r\n    JOIN T_CONTACT_METHOD cm on ct.contact_method_id = cm.id\r\n    LEFT JOIN T_COUNTRY cic on ci.country_id = cic.id\r\n    LEFT JOIN migration_country_mapping mcm on mcm.recoveryPlannerCountryName = cic.name\r\n    where cm.name in ('PHONE', 'Cell Phone') \r\n    and ci.emergency = 0\r\n);\r\n\r\ndrop table if exists migration_configuredUserPhones;\r\n\r\ncreate table migration_configuredUserPhones AS\r\n(select * from\r\n(select\r\n    ROW_NUMBER() OVER (PARTITION BY newUserId, phoneNumberTypeId order by rpPhoneId) row_num_internal\r\n    , rpPhoneId\r\n    , newPhoneId\r\n    , newUserId\r\n    , name\r\n    , REPLACE(REPLACE(REPLACE(REPLACE(phoneNumber, ' ', ''), '(', ''), ')', ''), '-', '') phoneNumber\r\n    , internationalCode\r\n    , extension\r\n    , recoveryPlannerCountryName\r\n    , CountryTypeName\r\n    , CountryTypeId\r\n    , phoneNumberSubTypeId\r\n    , phoneNumberTypeId\r\nfrom migration_all_userPhones) t\r\nwhere row_num_internal = 1);\r\n\t\r\n\r\n/* 2/20/24...  When you do phone numbers for a user, create four types, regardless as to whether they have numbers for them (Mobile, Personal, Additional Personal, and Office). If there is not a number for that type, set the phonenumber to ''.*/\r\ndrop table if exists migration_UserPhones;\r\n\r\ncreate table migration_UserPhones as (\r\n        \r\n    with userConfiguredPhoneNumbers as (\r\n        select newUserId \r\n        , phoneNumberTypeId\r\n        , case\r\n            when phoneNumberTypeId = '20509910-5326-4057-b21f-5c694b314692' then 'preparisOfficePhone'\r\n            when phoneNumberTypeId = '5eec12d5-595f-4123-a613-c63e701ae993' then 'preparisPersonalPhone' \r\n            when phoneNumberTypeId = '33f27328-8fee-4835-b020-cd6d48bb39cd' then 'preparisMobilePhone'\r\n            when phoneNumberTypeId = '391dca7b-aac3-4875-94e2-2ef680c7f35f' then 'preparisAdditionalMobilePhone'\r\n            END as phonenumberTypeName\r\n        , phoneNumber\r\n        , phoneNumberSubTypeId\r\n        , extension\r\n        from migration_configuredUserPhones\r\n    )\r\n    , userOfficePhoneNumbers as (\r\n        select * from userConfiguredPhoneNumbers where phonenumberTypeName = 'preparisOfficePhone'\r\n    )\r\n    , newUserOfficePhoneNumbers as (\r\n        select mud.newUserId\r\n        , '20509910-5326-4057-b21f-5c694b314692' phoneNumberTypeId\r\n        , 'preparisOfficePhone' phonenumberTypeName\r\n        , '' phoneNumber\r\n        , '8337fbb1-9a43-45eb-aafa-19c877e762fc' phoneNumberSubTypeId\r\n        , '' extension\r\n        from migration_user_data mud\r\n        left join userOfficePhoneNumbers upn on mud.newUserId = upn.newUserId\r\n        where upn.newuserid is NULL\r\n    )\r\n    , userPersonalPhoneNumbers as (\r\n        select * from userConfiguredPhoneNumbers where phonenumberTypeName = 'preparisPersonalPhone'\r\n    )\r\n    , newUserPersonalPhoneNumbers as (\r\n        select mud.newUserId\r\n        , '5eec12d5-595f-4123-a613-c63e701ae993' phoneNumberTypeId\r\n        , 'preparisPersonalPhone' phonenumberTypeName\r\n        , '' phoneNumber\r\n        , '8337fbb1-9a43-45eb-aafa-19c877e762fc' phoneNumberSubTypeId\r\n        , '' extension\r\n        from migration_user_data mud\r\n        left join userPersonalPhoneNumbers upn on mud.newUserId = upn.newUserId\r\n        where upn.newuserid is NULL\r\n    )\r\n    , userMobilePhoneNumbers as (\r\n        select * from userConfiguredPhoneNumbers where phonenumberTypeName = 'preparisMobilePhone'\r\n    )\r\n    , newUserMobilePhoneNumbers as (\r\n        select mud.newUserId\r\n        , '33f27328-8fee-4835-b020-cd6d48bb39cd' phoneNumberTypeId\r\n        , 'preparisMobilePhone' phonenumberTypeName\r\n        , '' phoneNumber\r\n        , '8337fbb1-9a43-45eb-aafa-19c877e762fc' phoneNumberSubTypeId\r\n        , '' extension\r\n        from migration_user_data mud\r\n        left join userMobilePhoneNumbers upn on mud.newUserId = upn.newUserId\r\n        where upn.newuserid is NULL\r\n    )\r\n    , userAdditionalMobilePhoneNumbers as (\r\n        select * from userConfiguredPhoneNumbers where phonenumberTypeName = 'preparisAdditionalMobilePhone'\r\n    )\r\n    , newUserAdditionalMobilePhoneNumbers as (\r\n        select mud.newUserId\r\n        , '391dca7b-aac3-4875-94e2-2ef680c7f35f' phoneNumberTypeId\r\n        , 'preparisAdditionalMobilePhone' phonenumberTypeName\r\n        , '' phoneNumber\r\n        , '8337fbb1-9a43-45eb-aafa-19c877e762fc' phoneNumberSubTypeId\r\n        , '' extension\r\n        from migration_user_data mud\r\n        left join userAdditionalMobilePhoneNumbers upn on mud.newUserId = upn.newUserId\r\n        where upn.newuserid is NULL\r\n    )\r\n    , combined_phone_data as (\r\n        select *,  (SELECT uuid()) as newPhoneId from userOfficePhoneNumbers\r\n        UNION\r\n        select *,  (SELECT uuid()) as newPhoneId from newUserOfficePhoneNumbers\r\n        UNION\r\n        select *,  (SELECT uuid()) as newPhoneId from userPersonalPhoneNumbers\r\n        UNION\r\n        select *,  (SELECT uuid()) as newPhoneId from newUserPersonalPhoneNumbers\r\n        UNION\r\n        select *,  (SELECT uuid()) as newPhoneId from userMobilePhoneNumbers\r\n        UNION\r\n        select *,  (SELECT uuid()) as newPhoneId from newUserMobilePhoneNumbers\r\n        UNION\r\n        select *,  (SELECT uuid()) as newPhoneId from userAdditionalMobilePhoneNumbers\r\n        UNION\r\n        select *,  (SELECT uuid()) as newPhoneId from newUserAdditionalMobilePhoneNumbers\r\n    )\r\n    select \r\n    ROW_NUMBER() OVER (ORDER BY newPhoneId) row_num\r\n    , cpd.*\r\n    from combined_phone_data cpd\r\n);\r\n\r\nselect count(*) from migration_UserPhones;",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "RecoveryPlanner",
						"type": "DatasetReference",
						"parameters": {
							"db_name": {
								"value": "@pipeline().globalParameters.rp_db_name",
								"type": "Expression"
							},
							"server_name": {
								"value": "@pipeline().globalParameters.rp_server_name",
								"type": "Expression"
							}
						}
					}
				}
			}
		],
		"parameters": {
			"PortalEntityID": {
				"type": "string"
			},
			"CreatedByGUID": {
				"type": "string"
			},
			"rp_db_name": {
				"type": "string"
			},
			"rp_db_server": {
				"type": "string"
			}
		},
		"variables": {
			"user_insert_statements": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "Users"
		},
		"annotations": [],
		"lastPublishTime": "2024-03-25T14:09:23Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}